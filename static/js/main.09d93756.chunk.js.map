{"version":3,"sources":["store/initialState.js","store/actions.js","store/reducer.js","store/store.js","components/Header/Header.js","components/Main/Menu/Menu.js","components/Main/Templates/Buttons/Button.js","components/Main/Templates/EmailTemplate/EmailTemplate.js","components/Main/Templates/InputsTemplate/InputsTemplate.js","components/Main/Templates/Templates.js","components/Main/Feedback/Feedback.js","components/Main/Main.js","App.js","index.js"],"names":["state","menuList","id","title","bodyEmail","name","dirtyText","cleanText","pageActive","idActivePage","placeholders","text","CLICK_ON_MENU","BACK","NEXT","ADD_PLACEHOLDER","CLEAR_PLACEHOLDERS","FILL_PLACEHOLDER","FILL_EMAIL_BODY","FILL_CLEAN_EMAIL_TEXT","CREATE_EMAIL","CLEAR","actions","value","type","createCleanEmail","emailText","match","forEach","item","length","replace","find","placeholder","store","createStore","action","idMax","map","initialState","Header","className","role","href","Menu","useSelector","dispatch","useDispatch","onClick","event","currentTarget","classnames","Button","buttonName","isChangeEmailBody","setIsChangeEmailBody","indexOf","push","userPressed","target","innerText","EmailTemplate","useState","variable","setVariable","dirtyEmail","cleanEmail","describeVariable","htmlFor","onChange","char","charAt","isLetter","charCodeAt","inputtingEmailBody","selectedId","InputsTemplate","pressButton","data","Templates","Feedback","isFeedback","isSentSuccess","setTimeout","Main","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09d93756.chunk.js","sourcesContent":["export let state = {\n  menuList: [\n    {\n      id: 1,\n      title: 'Compose Email Template',\n    },\n    {\n      id: 2,\n      title: 'Set Values',\n    },\n    {\n      id: 3,\n      title: 'Preview & Send',\n    },\n  ],\n  bodyEmail: {\n    name: 'Body',\n    dirtyText: '',\n    cleanText: '',\n  },\n  pageActive: { idActivePage: 1 },\n  placeholders: [\n    {\n      id: 1,\n      title: 'Recipients',\n      name: '{recipient}',\n      text: '',\n    },\n    {\n      id: 2,\n      title: 'Subject',\n      name: '{subject}',\n      text: '',\n    },\n  ],\n};\n","export const CLICK_ON_MENU = 'CLICK_ON_MENU';\nexport const BACK = 'BACK';\nexport const NEXT = 'NEXT';\nexport const ADD_PLACEHOLDER = 'ADD_PLACEHOLDER';\nexport const CLEAR_PLACEHOLDERS = 'CLEAR_PLACEHOLDERS';\nexport const FILL_PLACEHOLDER = 'FILL_PLACEHOLDER';\nexport const FILL_EMAIL_BODY = 'FILL_BODY_EMAIL';\nexport const FILL_CLEAN_EMAIL_TEXT = 'FILL_CLEAN_EMAIL_TEXT';\nexport const CREATE_EMAIL = 'CREATE_EMAIL';\nexport const CLEAR = 'CLEAR';\n\nexport const actions = {\n  clickOnMenu: (value) => ({ type: CLICK_ON_MENU, value }),\n  back: () => ({ type: BACK }),\n  next: () => ({ type: NEXT }),\n  addPlaceholder: (value) => ({ type: ADD_PLACEHOLDER, value }),\n  clearPlaceholders: () => ({ type: CLEAR_PLACEHOLDERS }),\n  fillPlaceholder: (id, value) => ({ type: FILL_PLACEHOLDER, id, value }),\n  fillEmailBody: (value) => ({ type: FILL_EMAIL_BODY, value }),\n  fillCleanEmailText: () => ({ type: FILL_CLEAN_EMAIL_TEXT }),\n  createEmail: () => ({ type: CREATE_EMAIL }),\n  clear: () => ({ type: CLEAR }),\n};\n","import { state as initialState } from './initialState';\nimport {\n  FILL_EMAIL_BODY, FILL_CLEAN_EMAIL_TEXT, CREATE_EMAIL,\n  ADD_PLACEHOLDER, CLEAR_PLACEHOLDERS, FILL_PLACEHOLDER,\n  CLICK_ON_MENU, BACK, NEXT,\n  CLEAR,\n} from './actions';\n\nconst createCleanEmail = (emailText, placeholders) => {\n  let text = emailText;\n  let allPlaceholders = emailText.match(/{\\w+}/g);\n  allPlaceholders.forEach(item => {\n    if (placeholders.length > 2) {\n      text = text.replace(\n        item, placeholders.find(placeholder => placeholder.name === item).text\n      )\n    }\n  });\n  return text;\n};\n\nexport const reducer = (state = {}, action) => {\n  const idMax = state.placeholders.length;\n\n  switch (action.type) {\n    case FILL_EMAIL_BODY:\n      return {\n        ...state,\n        bodyEmail: {\n          ...state.bodyEmail,\n          dirtyText: action.value,\n          cleanText: action.value,\n        },\n      };\n\n    case FILL_CLEAN_EMAIL_TEXT:\n      return {\n        ...state,\n        bodyEmail: {\n          ...state.bodyEmail,\n          cleanText: state.bodyEmail.dirtyText,\n        },\n      };\n\n    case CREATE_EMAIL:\n      return {\n        ...state,\n        bodyEmail: {\n          ...state.bodyEmail,\n          cleanText: createCleanEmail(state.bodyEmail.cleanText, state.placeholders),\n        },\n      };\n\n    case ADD_PLACEHOLDER:\n      return {\n        ...state,\n        placeholders: [\n          ...state.placeholders,\n          {\n            id: idMax + 1,\n            title: '',\n            name: action.value,\n            text: '',\n          },\n        ],\n      };\n    \n    case CLEAR_PLACEHOLDERS:\n      return {\n        ...state,\n        placeholders: [\n          state.placeholders[0],\n          state.placeholders[1],\n        ],\n      };\n\n    case FILL_PLACEHOLDER:\n      return {\n        ...state,\n        placeholders:\n          state.placeholders.map(placeholder => {\n            if (placeholder.id === action.id) {\n              return {\n                ...placeholder,\n                text: action.value,\n              };\n            }\n            return { ...placeholder };\n          }),\n      };\n\n    case CLICK_ON_MENU:\n      return {\n        ...state,\n        pageActive: { idActivePage: action.value },\n      };\n\n    case BACK:\n      return {\n        ...state,\n        pageActive: { idActivePage: --state.pageActive.idActivePage },\n      };\n\n    case NEXT:\n      return {\n        ...state,\n        pageActive: { idActivePage: ++state.pageActive.idActivePage },\n      };\n\n    case CLEAR:\n      return initialState;\n\n    default:\n      return state;\n  };\n};\n","import { createStore } from 'redux';\nimport { state } from './initialState';\nimport { reducer } from './reducer';\n\nexport const store = createStore(reducer, state);\n","import './Header.scss';\n\nexport function Header() {\n  return (\n    <>\n      <header className=\"header\">\n\n      <section className=\"header__logo\" role=\"navigation\">\n        <a className=\"header__link\" href=\"#home_page\">\n            <div className=\"header__logo-part1\" />\n            <div className=\"header__logo-part2\" />\n        </a>\n        \n        <h1 className=\"header__title\">Email Templater</h1>\n      </section>\n\n      </header>\n    </>\n  );\n}\n","import classnames from 'classnames';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actions } from '../../../store/actions';\n\nimport './Menu.scss';\n\nexport function Menu() {\n  const idActivePage = useSelector((state) => state.pageActive.idActivePage);\n  const menuList = useSelector((state) => state.menuList);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <section className=\"menu\">\n\n        <ul className=\"menu__list\">\n\n          {\n            menuList.map(item => (\n              <li\n                onClick={(event) => (\n                  dispatch(actions.clickOnMenu(+event.currentTarget.id))\n                )}\n                className=\"menu__item\"\n                id={item.id}\n                key={item.id}\n              >\n\n                <div\n                  className={\n                    classnames({\n                      'menu__counter': true,\n                      'menu__counter-active': item.id === idActivePage,\n                    })\n                  }\n                >\n                  <span className=\"menu__counter-text\">{item.id}</span>\n                </div>\n\n                <p\n                  className={\n                    classnames({\n                      'menu__item-title': true,\n                      'menu__item-active': item.id === idActivePage,\n                    })\n                  }\n                >\n                  {item.title}\n                </p>\n\n              </li>\n            ))\n          }\n\n        </ul>\n\n      </section>\n    </>\n  );\n}\n","import classnames from 'classnames';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actions } from '../../../../store/actions';\n\nimport './Button.scss';\n\nexport function Button({\n  buttonName,\n  isChangeEmailBody,\n  setIsChangeEmailBody,\n}) {\n  const dispatch = useDispatch();\n  const dirtyText = useSelector(state => state.bodyEmail.dirtyText);\n\n  const userPressed = (name) => {\n    name === 'BACK' && dispatch(actions.back());\n\n    if (name !== 'BACK' && name !== 'SEND') {\n      dispatch(actions.next());\n      dispatch(actions.fillCleanEmailText());\n      dispatch(actions.createEmail());\n    }\n\n    if (name === 'SET VARIABLES' && isChangeEmailBody) {\n      let placeholders = [];\n      dirtyText\n        .match(/{\\w+}/g)\n        .forEach(item => {\n          if (placeholders.indexOf(item) < 0) {\n            placeholders.push(item);\n          }\n        });\n\n        placeholders.forEach(item => {\n          item !== '{subject}' && dispatch(actions.addPlaceholder(item))\n        });\n\n      setIsChangeEmailBody(false);\n    }\n\n    if (name === 'SEND') {\n      \n    }\n  };\n\n  return (\n    <>\n      <button\n          onClick={(event) => userPressed(event.target.innerText)}\n          className={\n            classnames({\n              'button': true,\n              'button--gray': buttonName === 'BACK'\n            })\n          }\n          type=\"button\"\n        >\n          {buttonName}\n        </button>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport classnames from 'classnames';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actions } from '../../../../store/actions';\n\nimport { Button } from '../Buttons/Button';\n\nimport './EmailTemplate.scss';\n\nexport function EmailTemplate() {\n  const [isChangeEmailBody, setIsChangeEmailBody] = useState(false);\n  const [variable, setVariable] = useState('');\n  const idActivePage = useSelector((state) => state.pageActive.idActivePage);\n  const dirtyEmail = useSelector((state) => state.bodyEmail.dirtyText);\n  const cleanEmail = useSelector((state) => state.bodyEmail.cleanText);\n\n  const dispatch = useDispatch();\n\n  const inputtingEmailBody = (text) => {\n    setIsChangeEmailBody(true);\n    dispatch(actions.clearPlaceholders());\n\n    const char = text.charAt(text.length-1);\n\n    const isLetter = (\n      (char.charCodeAt(0) >= 65\n        && char.charCodeAt(0) <= 90)\n      ||\n      (char.charCodeAt(0) >= 97\n        && char.charCodeAt(0) <= 122)\n    );\n\n    !variable && dispatch(actions.fillEmailBody(text));\n\n    if (char === '{') {\n      setVariable(char);\n    }\n\n    if (char === '}' && variable.length > 1) {\n      dispatch(actions.fillEmailBody(text));\n      setVariable('');\n    }\n\n    if (variable && isLetter) {\n      dispatch(actions.fillEmailBody(text));\n      setVariable(variable + char);\n    }\n  };\n\n  const describeVariable = (event) => {\n    dispatch(\n      actions.fillPlaceholder((+event.target.id), event.target.value)\n    );\n  };\n\n  return (\n    <>\n      <div\n        className={\n          classnames({\n            'composeEmail': idActivePage === 1,\n            'composeEmail-prev': idActivePage === 3,\n          })\n        }\n      >\n\n        <h2\n          className={\n            classnames({\n              'composeEmail__title-email': idActivePage === 1,\n              'composeEmail__title-prev': idActivePage === 3,\n            })\n          }\n        >\n          {\n            idActivePage === 1\n              ? 'Compose Email Template'\n              : 'Preview and Send'\n          }\n        </h2>\n\n        <form className=\"composeEmail__form\">\n          <label\n            className=\"composeEmail__label composeEmail__label-recipients\"\n            htmlFor={useSelector((state) => state.placeholders[0].id)}\n          >\n            {useSelector((state) => state.placeholders[0].title)}\n          </label>\n\n          <input\n            onChange={(event) => describeVariable(event)}\n            value={useSelector((state) => state.placeholders[0].text)}\n            className=\"composeEmail__input composeEmail__input-recipients\"\n            id={useSelector((state) => state.placeholders[0].id)}\n          />\n\n          <label\n            className=\"composeEmail__label composeEmail__label-subject\"\n            htmlFor={useSelector((state) => state.placeholders[1].id)}\n          >\n            {useSelector((state) => state.placeholders[1].title)}\n          </label>\n\n          <input\n            onChange={(event) => describeVariable(event)}\n            value={useSelector((state) => state.placeholders[1].text)}\n            className=\"composeEmail__input composeEmail__input-subject\"\n            id={useSelector((state) => state.placeholders[1].id)}\n          />\n\n          <label\n            className=\"composeEmail__label composeEmail__label-body\"\n            htmlFor=\"body\"\n          >\n            {useSelector((state) => state.bodyEmail.name)}\n          </label>\n\n          <textarea\n            onChange={(event) => inputtingEmailBody(event.target.value)}\n            value={ idActivePage === 1 ? dirtyEmail : cleanEmail }\n            className=\"composeEmail__input composeEmail__input-body\"\n            id=\"body\"\n          />\n\n          <div role=\"button\"\n            className={\n              classnames({\n                'button__wrap': true,\n                'button__wrap-2': idActivePage === 3,\n              })\n            }\n          >\n            {\n              idActivePage === 1\n                ?\n                  <Button\n                    buttonName={'SET VARIABLES'}\n                    selectedId={idActivePage}\n                    isChangeEmailBody={isChangeEmailBody}\n                    setIsChangeEmailBody={setIsChangeEmailBody}\n                  />\n                :\n                  <>\n                    <Button\n                      buttonName={'BACK'}\n                      selectedId={idActivePage}\n                    />\n                    <Button\n                      buttonName={'SEND'}\n                      selectedId={idActivePage}\n                    />\n                  </>\n            }\n          </div>\n\n        </form>\n\n      </div>\n    </>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { actions } from '../../../../store/actions';\n\nimport { Button } from '../Buttons/Button';\nimport './InputsTemplate.scss';\n\nexport function InputsTemplate({\n  selectedId,\n  pressButton,\n}) {\n  const placeholders = useSelector((state) => state.placeholders);\n  const dispatch = useDispatch();\n\n  const describeVariable = (event) => {\n    dispatch(\n      actions.fillPlaceholder((+event.target.id), event.target.value)\n    );\n  };\n\n  return (\n    <>\n      <section className=\"inputsTemplate\">\n        <h2 className=\"inputsTemplate__title\">\n          Set Values\n        </h2>\n\n        <div className=\"inputsTemplate--wrap\">\n          {\n            placeholders.map(item => (\n              <div key={item.id}>\n                <label\n                  className=\"inputsTemplate__label\"\n                  htmlFor={item.id}\n                >\n                  {item.name}\n                </label>\n                <input\n                  onChange={(event) => describeVariable(event)}\n                  value={item.text}\n                  className=\"inputsTemplate__input\"\n                  data={item.name}\n                  id={item.id}\n                />\n              </div>\n            ))\n          }\n        </div>\n\n        <div role=\"button\"\n          className=\"button__wrap button__wrap-2\"\n        >\n          <Button\n            buttonName={'BACK'}\n            selectedId={selectedId}\n            pressButton={pressButton}\n          />\n          <Button\n            buttonName={'NEXT'}\n            selectedId={selectedId}\n            pressButton={pressButton}\n          />\n        </div>\n      </section>\n    </>\n  );\n}\n","\nimport { EmailTemplate } from './EmailTemplate/EmailTemplate.js';\nimport { InputsTemplate } from './InputsTemplate/InputsTemplate.js';\n\nimport { useSelector } from 'react-redux';\n\nimport './Templates.scss';\n\nexport function Templates() {\n  const idActivePage = useSelector((state) => state.pageActive.idActivePage);\n\n  return (\n    <>\n      <div className=\"templates\">\n        {\n          idActivePage !== 2\n          &&\n          <EmailTemplate />\n        }\n\n        {\n          idActivePage === 2\n          &&\n          <InputsTemplate\n            idActivePage={idActivePage}\n          />\n        }\n\n      </div>\n    </>\n  );\n}\n","import classnames from 'classnames';\n\nimport './Feedback.scss';\n\nexport function Feedback({\n  isFeedback,\n  isSentSuccess,\n}) {\n\n  setTimeout(() => {\n    isFeedback = false;\n  }, 5000);\n\n  return (\n    <>\n      <div className={\n        classnames({\n          'feedback': true,\n          'feedback--visible': isFeedback,\n        })\n      }\n      >\n\n        <div\n          className={\n            classnames({\n              'feedback__status': true,\n              'feedback__status--good': isSentSuccess,\n              'feedback__status--bed': !isSentSuccess,\n            })\n          }\n        />\n        <p className=\"feedback__text\">\n          {\n            isSentSuccess\n              ? 'Email sent successfully!'\n              : 'Failed to send email!'\n          }\n        </p>\n        <div className=\"feedback__cross\" />\n\n      </div>\n    </>\n  );\n}\n","import { useState } from 'react';\n\nimport './Main.scss';\n\nimport { Menu } from './Menu/Menu';\nimport { Templates } from './Templates/Templates';\nimport { Feedback } from './Feedback/Feedback';\n\nexport function Main() {\n  const isSentSuccess = false;\n  const [isFeedback, setIsFeedback] = useState(true);\n\n  return (\n    <>\n      <main className=\"main\">\n\n        <Menu />\n\n        <Templates />\n\n        <Feedback\n          isFeedback={isFeedback}\n          isSentSuccess={isSentSuccess}\n        />\n\n      </main>\n    </>\n  );\n}\n","import './App.scss';\n\nimport { Header } from './components/Header/Header';\nimport { Main } from './components/Main/Main';\n\nfunction App() {\n\n  return (\n    <div className=\"App\" id=\"home_page\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { store } from './store/store';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}